{%- raw -%}
# This workflow will run benchmarks with airspeed velocity (asv) for pull requests.
# It will compare the performance of the main branch with the performance of the merge
# with the new changes. It then publishes a comment with this assessment by triggering
# the publish-benchmarks-pr workflow.
# Based on https://securitylab.github.com/research/github-actions-preventing-pwn-requests/.
name: Run benchmarks for PR

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ${{github.workflow}}-${{github.ref}}
  cancel-in-progress: true

env:
{%- endraw %}
{%- import 'python-versions.jinja' as py%}
  PYTHON_VERSION: "{{ py.pref(python_versions) }}"
{%- raw %}
  ASV_VERSION: "0.6.4"
  WORKING_DIR: ${{github.workspace}}/benchmarks
  ARTIFACTS_DIR: ${{github.workspace}}/artifacts

jobs:
  asv-pr:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{env.WORKING_DIR}}
    steps:
    - name: Set up Python ${{env.PYTHON_VERSION}}
      uses: actions/setup-python@v5
      with:
        python-version: ${{env.PYTHON_VERSION}}
    - name: Checkout PR branch of the repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Display Workflow Run Information
      run: |
        echo "Workflow Run ID: ${{github.run_id}}"
    - name: Install dependencies
      run: pip install asv[virtualenv]==$ASV_VERSION lf-asv-formatter
    - name: Make artifacts directory
      run: mkdir -p ${{env.ARTIFACTS_DIR}}
    - name: Save pull request number
      run: echo ${{github.event.pull_request.number}} > $ARTIFACTS_DIR/pr
    - name: Get current job logs URL
      uses: Tiryoh/gha-jobid-action@v1
      id: jobs
      with:
        github_token: ${{secrets.GITHUB_TOKEN}}
        job_name: ${{github.job}}
    - name: Create ASV machine config file
      run: asv machine --machine gh-runner --yes
    - name: Compare PR against main branch
      id: asv_compare
      run: |
        git remote add upstream https://github.com/${{github.repository}}.git
        git fetch upstream
        asv continuous upstream/main HEAD --factor 1.5 --verbose
      continue-on-error: true
    - name: Format ASV output
      if: always()
      run: |
        asv compare upstream/main HEAD --verbose --sort ratio | tee output
        python -m lf_asv_formatter --asv_version $ASV_VERSION
        if [[ "${{ steps.asv_compare.outcome }}" == "failure" ]]; then
          MESSAGE="Some benchmarks failed or their performance regressed significantly."
        else
          MESSAGE="Click [here]($STEP_URL) to view all benchmarks."
        fi
        printf "\n\n%s\n" "$MESSAGE" >> output
        mv output $ARTIFACTS_DIR
      env:
        STEP_URL: ${{steps.jobs.outputs.html_url}}#step:10:1
    - name: Upload artifacts (PR number and benchmarks output)
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: benchmark-artifacts
        path: ${{env.ARTIFACTS_DIR}}
    - name: Fail workflow
      if: steps.asv_compare.outcome == 'failure'
      run: exit 1
{%- endraw -%}