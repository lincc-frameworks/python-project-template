_message_before_copy: |
    Thanks for generating a project using LINCC's template.

    You'll be asked a series of questions whose answers will be used to
    generate a tailored project for you.

    You can refer to our documentation for more details and contact info
    https://lincc-ppt.readthedocs.io/en/latest/

custom_install:
    help: Would you like to use simple (default tooling) or customized installation? 
    type: bool
    default: customized
    choices:
        customized: true
        simple: false

project_name:
    type: str
    help: What is the name of your project?
    default: example_project
    validator: >-
        {% if not (project_name | regex_search('^[a-z][a-z0-9\_\-]+$')) %}
        Must use a lowercase letter followed by one or more of (a-z, 0-9, _, -).
        {% endif %}

package_name:
    type: str
    help: What is your python package name?
    default: example_package
    validator: >-
        {% if not (package_name | regex_search('^[a-z][a-z0-9\_]+$')) %}
        Must use a lowercase letter followed by one or more of (a-z, 0-9, _).
        {% endif %}

project_organization:
    type: str
    help: What github organization will your project live under? 
    default: my-organization
    validator: >-
        {% if not (project_organization | regex_search('^[a-zA-Z0-9][a-zA-Z0-9\-]*$')) %}
        The name may only contain alphanumeric characters or single hyphens, and cannot begin or end with a hyphen.
        {% endif %}

author_name:
    type: str
    help: What is the name of the code author? (Can be a person or organization)
    default: Your Name

author_email:
    type: str
    help: Code author's preferred email address?
    default: name@you.com

project_license:
    help: What license would you like to use?
    type: str
    default: MIT
    choices:
        MIT: MIT
        BSD: BSD
        none: none

python_versions:
    help: What versions of python are you targeting? We will add automated testing for these versions.
    default: ["3.9", "3.10", "3.11"]
    type: str
    multiselect: true
    choices:
        "3.7 (end-of-life)": "3.7"
        "3.8": "3.8"
        "3.9": "3.9"
        "3.10": "3.10"
        "3.11": "3.11"
        "3.12": "3.12"
    when: "{{ custom_install }}"

enforce_style:
    help: What tooling set would you like to use to enforce code style? Use SPACE to highlight all that apply.
    type: str
    default: [ruff_lint, ruff_format]
    multiselect: true
    choices:
        ruff linting: ruff_lint
        ruff auto-formatter: ruff_format
        pylint: pylint
        black: black
        isort: isort
    when: "{{ custom_install }}"

failure_notification:
    help: How would you like to receive workflow failure notifications?
    type: str
    default: []
    multiselect: true
    choices:
        email (additional configuration required): email
        slack bot integration (additional configuration required): slack
    when: "{{ custom_install }}"

mypy_type_checking:
    help: Would you like to include mypy to perform static type checking for type hints?
    type: str
    default: none
    choices:
        No type checking: none
        Add basic type checking for code that has type hints: basic
        Add strict type checking to enforce that type hints are used: strict
    when: "{{ custom_install }}"

create_example_module:
    help: Do you want to create some example module code?
    type: bool
    default: yes
    choices:
        yes: true
        no: false
    when: "{{ custom_install }}"

include_docs:
    help: Do you want to include a directory for sphinx, and autoapi generation?
    type: bool
    default: yes
    choices:
        yes: true
        no: false
    when: "{{ custom_install }}"

include_notebooks:
    help: Do you want to include rendered notebooks in your documentation?
    type: bool
    default: "{{ include_docs }}"
    choices:
        yes: true
        no: false
    when: "{{ custom_install and include_docs }}"

include_benchmarks:
    help: Do you want to enable benchmarking?
    type: bool
    default: yes
    choices:
        yes: true
        no: false
    when: "{{ custom_install }}"

_message_after_copy: |
    Your project "{{ project_name }}" has been created successfully!

    Next, change directory to the project root, create virtual environment, and complete git configuration:

       $ cd {{ _copier_conf.dst_path }}
       $ python3 -mvenv ~/.virtualenvs/{{ project_name }} && source ~/.virtualenvs/{{ project_name }}/bin/activate
       $ bash .prepare_project.sh

###
# Below this line are Copier configuration options.
###

# Subdirectory that contains the python-project-template. Allows template metadata to be separated from the template.
_subdirectory: python-project-template

_skip_if_exists:
    - README.md

# Require that the user has at least Copier v9.1.0 installed
# Earliest version with "multiselect" support.
_min_copier_version: "9.1.0"
